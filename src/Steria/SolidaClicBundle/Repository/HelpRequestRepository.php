<?php

namespace Steria\SolidaClicBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * HelpRequestRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HelpRequestRepository extends EntityRepository
{
	public function getList($rub=null, $dist=null, $lat=null, $lon=null, $page=1, $maxperpage=10)
	{
		$qb = $this->_em->createQueryBuilder();
		
        if ($lat !== null && $lon !== null) {
            $qb->select('hr, GEO(hr.lat = :latitude, hr.lon = :longitude) as dst');
            $qb->setParameter('latitude', $lat);
            $qb->setParameter('longitude', $lon);
        }
        else {
            $qb->select("hr, '-1' as dst");
        }
        
		$qb->from('SteriaSolidaClicBundle:HelpRequest', 'hr');
        $qb->where('hr.solved IS NULL');
		
		if ($rub !== null && $dist !== null) {
            $qb->having('dst <= :dist');
			$qb->setParameter('dist', $dist);
            
            $qb->andWhere('hr.fkCateg = :categ');
			$qb->setParameter('categ', $rub);
            
            $qb->orderBy("dst");
		}
        else if ($rub !== null) {
			$qb->andWhere('hr.fkCateg = :categ');
			$qb->setParameter('categ', $rub);
        }
        else if ($dist !== null) {
            $qb->having('dst <= :dist');
			$qb->setParameter('dist', $dist);
            $qb->orderBy("dst");
        }
        
		$qb->setFirstResult(($page-1) * $maxperpage);
		$qb->setMaxResults($maxperpage);
		
		return new Paginator($qb);
	}
	
	public function countCateg($rub=null, $dist=null, $lat=null, $lon=null)
	{
	    $qb = $this->_em->createQueryBuilder();
		
		$qb->select('count(hr.id)');
		$qb->from('SteriaSolidaClicBundle:HelpRequest', 'hr');
        
        $qb->where('hr.solved IS NULL');
        
        if ($rub !== null && $dist !== null) {
            $qb->andWhere('hr.fkCateg = :categ');
			$qb->setParameter('categ', $rub);
            
            $qb->andWhere('GEO(hr.lat = :latitude, hr.lon = :longitude) <= :dist');
            $qb->setParameter('latitude', $lat);
            $qb->setParameter('longitude', $lon);
			$qb->setParameter('dist', $dist);
        }
		else if ($rub !== null) {
			$qb->andWhere('hr.fkCateg = :categ');
			$qb->setParameter('categ', $rub);
		}
        else if ($dist !== null) {
            $qb->andWhere('GEO(hr.lat = :latitude, hr.lon = :longitude) <= :dist');
            $qb->setParameter('latitude', $lat);
            $qb->setParameter('longitude', $lon);
			$qb->setParameter('dist', $dist);
        }
        
		return $qb->getQuery()->getSingleScalarResult();
	}
}